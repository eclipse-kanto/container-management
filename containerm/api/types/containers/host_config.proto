// Copyright (c) 2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License 2.0 which is available at
// https://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
// which is available at https://www.apache.org/licenses/LICENSE-2.0.
//
// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0

syntax = "proto3";

package github.com.eclipse_kanto.container_management.containerm.api.types.containers;


import "api/types/containers/device_mapping.proto";
import "api/types/containers/restart_policy.proto";
import "api/types/containers/port_mapping.proto";
import "api/types/containers/log_config.proto";
import "api/types/containers/resources.proto";

option go_package = "github.com/eclipse-kanto/container-management/containerm/api/types/containers;containers";

// Defines the resources, behavior, etc. that the host must manage on the container
message HostConfig {

    // Accessible devices from the host
    repeated DeviceMapping devices = 1;

    // Network mode for the container - bridge, host, none - default is bridge
    string network_mode = 2;

    // Whether the container has a privileged access to the host
    bool privileged = 3;

    // The container's restart policy
    RestartPolicy restart_policy = 4;

    // The specific runtime name - the default for containerd is io.containerd.runtime.v1.[os name]
    string runtime = 5;

    // Additional host address for container to host communication
    repeated string extra_hosts = 6;

    // Mapped ports
    repeated PortMapping port_mappings = 7;

    // Log configuration
    LogConfiguration log_config = 8;

    // Resources
    Resources resources = 9;
}

